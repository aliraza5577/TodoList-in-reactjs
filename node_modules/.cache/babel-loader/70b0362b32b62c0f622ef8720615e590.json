{"ast":null,"code":"var _jsxFileName = \"E:\\\\React training\\\\Todo List\\\\src\\\\app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputList, setInputList] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const itemEvent = event => {\n    setInputList(event.target.value);\n  };\n\n  const listOfItems = () => {\n    setItems(oldItems => {\n      return [...oldItems, inputList];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Todo List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a item\",\n            onChange: itemEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: listOfItems,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: inputList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"C1GGje9cTLAVQF5sriN6y+QVr9A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React training/Todo List/src/app.jsx"],"names":["React","useState","App","inputList","setInputList","items","setItems","itemEvent","event","target","value","listOfItems","oldItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,GAAT,GAAc;AAAA;;AAEV,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,SAAS,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBL,IAAAA,QAAQ,CAAEM,QAAD,IAAc;AACnB,aAAO,CAAC,GAAGA,QAAJ,EAAcT,SAAd,CAAP;AACH,KAFO,CAAR;AAGH,GAJD;;AASA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,YAA/B;AAA4C,YAAA,QAAQ,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,mCACI;AAAA,wBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH;;GAlCQD,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction App(){\r\n    \r\n    const [inputList, setInputList] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n\r\n    const itemEvent = (event) => {\r\n        setInputList(event.target.value);\r\n    };\r\n\r\n    const listOfItems = () => {\r\n        setItems((oldItems) => {\r\n            return [...oldItems, inputList];\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className='mainWrapper'>\r\n            <div className='innerWrapper'>\r\n                <div className='listCard'>\r\n                    <h1>Todo List</h1>\r\n                    <input type=\"text\" placeholder=\"Add a item\" onChange={itemEvent} />\r\n                    <button onClick={listOfItems}>+</button>\r\n                    <ol>\r\n                        <li>{inputList}</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}